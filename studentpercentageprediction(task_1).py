# -*- coding: utf-8 -*-
"""StudentPercentagePrediction(Task 1)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cZen-CG99Gk70hg5MnnTLlxAkr6IKjcN

## Predict the percentage of an student based on the no. of study hours.
Task 1

## Importing the libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""## Importing the dataset"""

url = "https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv"
dataset = pd.read_csv(url)
print("Data Imported Successfully")

dataset.head(10)

dataset.plot(x='Hours', y='Scores', style="o")
plt.title("Hours vs Percentage")
plt.xlabel("Hours Studied")
plt.ylabel("Percentage Score")
plt.show()

"""Preparing the data"""

x = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

"""## Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.2, random_state=0)

"""## Training the Simple Linear Regression model on the Training set"""

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(x_train, y_train)
print('Training Completed')

"""## Predicting the Test set results"""

print(x_test) # Testing data in hours.
y_pred = regressor.predict(x_test) # Predicting scores

"""## Visualising the Training set results"""

# plt.scatter(x_train, y_train, color="red")
# plt.plot(x_train, regressor.predict(x_train), color='blue')
# plt.title("No. Of Hours vs Student Score")
# plt.xlabel("Hours")
# plt.ylabel("Score") 
# plt.show()

"""# Comparing Actual Vs Predicted"""

# Comparing Actual Vs Predicted
df = pd.DataFrame({'Actual' : y_test, 'Predicted' : y_pred})
df

# Test Prediction with own data
hours = 9.25
pred_own = regressor.predict([[hours]])
print("No of Hours={}".format(hours))
print("Predicted Score = {}".format(pred_own[0]))